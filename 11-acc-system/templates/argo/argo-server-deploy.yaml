---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  namespace: acc-system
spec:
  replicas: 0
  selector:
    matchLabels:
      app: argo-server
  template:
    metadata:
      labels:
        app: argo-server
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: accordion-role
                operator: In
                values:
                - infra
            weight: 100
      containers:
      - args:
        - server
        env:
        - name: POD_NAMES
          value: v1
        image: '{{ base_registry_address }}:{{ base_registry_port }}/argocli:v3.4.4'
        name: argo-server
        ports:
        - containerPort: 2746
          name: web
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 20
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      imagePullSecrets:
      - name: infra-registry
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-server
      tolerations:
      - effect: NoSchedule
        key: accordion-role
        operator: Equal
        value: infra
      volumes:
      - emptyDir: {}
        name: tmp
