apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: acc-global
  labels:
    app: keycloak
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: accordion-role
                operator: In
                values:
                - infra
            weight: 100
      containers:
      - name: keycloak
        image: "{{ base_registry_address }}:{{ base_registry_port }}/keycloak:{{ keycloak_version }}"
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: keycloak
        volumeMounts:
        - name: zoneinfo
          mountPath: /usr/share/zoneinfo
          readOnly: true
        - name: config
          mountPath: /tmp/realm.json
          subPath: realm.json
          readOnly: true
      imagePullSecrets:
      - name: infra-registry
      initContainers:
      - name: wait-for-postgresql
        image: "{{ base_registry_address }}:{{ base_registry_port }}/busybox:latest"
        imagePullPolicy: Always
        command:
        - sh
        - -c
        - until printf "." && nc -z -w 2 keycloak-db 5432; do sleep 2; done;
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
      tolerations:
      - effect: NoSchedule
        key: accordion-role
        operator: Equal
        value: infra
      volumes:
      - name: zoneinfo
        hostPath:
          path: /usr/share/zoneinfo
      - name: config
        secret:
          secretName: keycloak
